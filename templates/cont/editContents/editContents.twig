{% extends "/layouts/plain.twig" %}

{% block title %}Pickles 2 Contents Editor{% endblock %}
{% block head %}
	{{ parent() }}
	{# Clover Common #}
	<link rel="stylesheet" href="{{ path_client_resources }}cloverCommon/cloverCommon.css" />
	<script src="{{ path_client_resources }}cloverCommon/cloverCommon.js"></script>

	{# Ace Editor #}
	<script src="{{ path_client_resources }}ace/ace.js"></script>

	{# Bootstrap 5 #}
	<script src="{{ path_client_resources }}bootstrap5/js/bootstrap.min.js"></script>

	{# Summernote Editor #}
	<script src="{{ path_client_resources }}summernote/summernote.js"></script>

	{# Keypress #}
	<script src="{{ path_client_resources }}dmauro-Keypress/keypress-2.1.5.min.js"></script>

	{% for path_px2ce_css in px2ce_res.css %}
	<link rel="stylesheet" href="{{ path_client_resources }}edit-contents/{{ path_px2ce_css }}" />
	{% endfor %}
	{% for path_px2ce_js in px2ce_res.js %}
	<script src="{{ path_client_resources }}edit-contents/{{ path_px2ce_js }}"></script>
	{% endfor %}

	<style>
		:root {
			--px2-main-color: #00a0e6;
			--px2-text-color: #333;
			--px2-background-color: #f9f9f9;
		}
		html, body {
			padding: 0; margin: 0;
			height: 100%;
		}
		body {
			display: flex;
			justify-content: center;
			align-items: stretch;
			align-content: stretch;
		}
		.pickles2-contents-editor--toolbar {
			box-sizing: border-box; /* TODO: px2ceの側に書くべき */
		}
		#cont-px2ce-canvas {
			width: 100%;
			height: 100%;
		}
	</style>
{% endblock %}
{% block content %}
	<div id="cont-px2ce-canvas"></div>
{% endblock %}
{% block foot %}
	<script type="text/javascript">

		(function(){
			var app_mode = "{{ plugin_options.app_mode | e("js") }}";
			var page_path = "{{ page_path | e("js") }}";
			var theme_id = "{{ theme_id | e("js") }}";
			var layout_id = "{{ layout_id | e("js") }}";
			var target_mode = "{{ target_mode | e("js") }}";
			// .envよりプレビューサーバーのURLを取得
			var preview_url = window.location.origin;
			var resizeTimer;
			var backto = "{{ backto | e("js") }}";

			if( page_path ){
				target_mode = 'page_content';
			}else if( theme_id && layout_id ){
				target_mode = 'theme_layout';
				page_path = '/'+theme_id+'/'+layout_id+'.html';
			}

			function base64_encode(orig) { return new Promise(function(rlv){
				var r = new FileReader();
				r.onload = function(){
					var offset = r.result.indexOf(",");
					rlv(r.result.slice(offset+1));
				};
				r.readAsDataURL(new Blob([orig]));
			}); }

			// Px2CE の初期化
			var pickles2ContentsEditor = new Pickles2ContentsEditor(); // px2ce client
			pickles2ContentsEditor.init(
				{
					'page_path': page_path ,
					'elmCanvas': document.getElementById('cont-px2ce-canvas'),
					'preview':{
						'origin': preview_url// プレビュー用サーバーの情報を設定します。
					},
					'lang': 'ja', // language
					'gpiBridge': function(input, callback){
						console.log('====== GPI Request:', input);
						// console.log(JSON.stringify(input);
						base64_encode( JSON.stringify(input) )
							.then((encodedInput) => {
								$.ajax({
									"url": '?PX=px2dthelper.px2ce.gpi',
									"method": 'post',
									'data': {
										'appMode': app_mode,
										'target_mode': target_mode,
										'data': encodedInput,
										'ADMIN_USER_CSRF_TOKEN': $('meta[name="csrf-token"]').attr('content'),
									},
									"error": function(error){
										console.error('------ GPI Response Error:', typeof(error), error);
										callback(error);
									},
									"success": function(data){
										console.log('------ GPI Response:', typeof(data), data);
										callback(data);
									},
									"complete": function(){
										window.cloverUtils.autoCommit();
									},
								});
							});
						return;
					},
					'complete': function(){
						if( target_mode == 'theme_layout' ){
							window.close();
							return;
						}
						if( backto == 'preview' ){
							window.location.href = '?';
							return;
						}
						window.location.href = '?PX=admin.page_info';
					},
					'clipboard': {
						'set': function( data, type, event, callback ){
							// console.log(data, type, event, callback);
							localStorage.setItem('app-burdock-virtualClipBoard', data);
							if( callback ){
								callback();
							}
						},
						'get': function( type, event, callback ){
							var rtn = localStorage.getItem('app-burdock-virtualClipBoard');
							// console.log(rtn);
							if( callback ){
								callback(rtn);
								return false;
							}
							return rtn;
						}
					},
					'onClickContentsLink': function( uri, data ){
						// TODO: 編集リンクを生成する
						// alert('編集: ' + uri);
					},
					'onMessage': function( message ){
						// ユーザーへ知らせるメッセージを表示する
						px2style.flashMessage(message);
						console.info('message: '+message);
					}
				},
				function(){
					// コールバック
					// 初期化完了！
					console.info('Standby!');

				}
			);

			$(window).on('resize', function(){
				clearTimeout(resizeTimer);
				resizeTimer = setTimeout(function(){
					if(pickles2ContentsEditor.redraw){
						pickles2ContentsEditor.redraw();
					}
				}, 500);
				return;
			});
		})();
	</script>
{% endblock %}
